
ProfPro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000700  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  080008a8  080008a8  000108a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080008b4  080008b4  000108bc  2**0
                  CONTENTS
  4 .ARM          00000000  080008b4  080008b4  000108bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008b4  080008bc  000108bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008b4  080008b4  000108b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008b8  080008b8  000108b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000108bc  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000108bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000142d  00000000  00000000  000108e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000044d  00000000  00000000  00011d13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000f8  00000000  00000000  00012160  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000b0  00000000  00000000  00012258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fa5  00000000  00000000  00012308  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001539  00000000  00000000  000142ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000089ae  00000000  00000000  000157e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001e194  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000002a8  00000000  00000000  0001e1e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000890 	.word	0x08000890

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000890 	.word	0x08000890

080001e8 <nvic_enable>:

#include "corem4.h"


void nvic_enable(uint8_t irq_number)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
	if(irq_number < 32)
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	2b1f      	cmp	r3, #31
 80001f6:	d809      	bhi.n	800020c <nvic_enable+0x24>
		*NVIC_ISER0 |= (1u<<irq_number);
 80001f8:	4b2c      	ldr	r3, [pc, #176]	; (80002ac <nvic_enable+0xc4>)
 80001fa:	681a      	ldr	r2, [r3, #0]
 80001fc:	79fb      	ldrb	r3, [r7, #7]
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f303 	lsl.w	r3, r1, r3
 8000204:	4929      	ldr	r1, [pc, #164]	; (80002ac <nvic_enable+0xc4>)
 8000206:	4313      	orrs	r3, r2
 8000208:	600b      	str	r3, [r1, #0]
	else if(irq_number>95 && irq_number < 128)
		*NVIC_ISER3 |= (1u<<(irq_number%32));
	else if(irq_number>127 && irq_number < 160)
		*NVIC_ISER4 |= (1u<<(irq_number%32));

}
 800020a:	e049      	b.n	80002a0 <nvic_enable+0xb8>
	else if(irq_number>31 && irq_number < 64)
 800020c:	79fb      	ldrb	r3, [r7, #7]
 800020e:	2b1f      	cmp	r3, #31
 8000210:	d90e      	bls.n	8000230 <nvic_enable+0x48>
 8000212:	79fb      	ldrb	r3, [r7, #7]
 8000214:	2b3f      	cmp	r3, #63	; 0x3f
 8000216:	d80b      	bhi.n	8000230 <nvic_enable+0x48>
		*NVIC_ISER1 |= (1u<<(irq_number %32));
 8000218:	4b25      	ldr	r3, [pc, #148]	; (80002b0 <nvic_enable+0xc8>)
 800021a:	681a      	ldr	r2, [r3, #0]
 800021c:	79fb      	ldrb	r3, [r7, #7]
 800021e:	f003 031f 	and.w	r3, r3, #31
 8000222:	2101      	movs	r1, #1
 8000224:	fa01 f303 	lsl.w	r3, r1, r3
 8000228:	4921      	ldr	r1, [pc, #132]	; (80002b0 <nvic_enable+0xc8>)
 800022a:	4313      	orrs	r3, r2
 800022c:	600b      	str	r3, [r1, #0]
 800022e:	e037      	b.n	80002a0 <nvic_enable+0xb8>
	else if(irq_number>63 && irq_number < 96)
 8000230:	79fb      	ldrb	r3, [r7, #7]
 8000232:	2b3f      	cmp	r3, #63	; 0x3f
 8000234:	d90e      	bls.n	8000254 <nvic_enable+0x6c>
 8000236:	79fb      	ldrb	r3, [r7, #7]
 8000238:	2b5f      	cmp	r3, #95	; 0x5f
 800023a:	d80b      	bhi.n	8000254 <nvic_enable+0x6c>
		*NVIC_ISER2 |= (1u<<(irq_number%32));
 800023c:	4b1d      	ldr	r3, [pc, #116]	; (80002b4 <nvic_enable+0xcc>)
 800023e:	681a      	ldr	r2, [r3, #0]
 8000240:	79fb      	ldrb	r3, [r7, #7]
 8000242:	f003 031f 	and.w	r3, r3, #31
 8000246:	2101      	movs	r1, #1
 8000248:	fa01 f303 	lsl.w	r3, r1, r3
 800024c:	4919      	ldr	r1, [pc, #100]	; (80002b4 <nvic_enable+0xcc>)
 800024e:	4313      	orrs	r3, r2
 8000250:	600b      	str	r3, [r1, #0]
 8000252:	e025      	b.n	80002a0 <nvic_enable+0xb8>
	else if(irq_number>95 && irq_number < 128)
 8000254:	79fb      	ldrb	r3, [r7, #7]
 8000256:	2b5f      	cmp	r3, #95	; 0x5f
 8000258:	d90f      	bls.n	800027a <nvic_enable+0x92>
 800025a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800025e:	2b00      	cmp	r3, #0
 8000260:	db0b      	blt.n	800027a <nvic_enable+0x92>
		*NVIC_ISER3 |= (1u<<(irq_number%32));
 8000262:	4b15      	ldr	r3, [pc, #84]	; (80002b8 <nvic_enable+0xd0>)
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	f003 031f 	and.w	r3, r3, #31
 800026c:	2101      	movs	r1, #1
 800026e:	fa01 f303 	lsl.w	r3, r1, r3
 8000272:	4911      	ldr	r1, [pc, #68]	; (80002b8 <nvic_enable+0xd0>)
 8000274:	4313      	orrs	r3, r2
 8000276:	600b      	str	r3, [r1, #0]
 8000278:	e012      	b.n	80002a0 <nvic_enable+0xb8>
	else if(irq_number>127 && irq_number < 160)
 800027a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800027e:	2b00      	cmp	r3, #0
 8000280:	da0e      	bge.n	80002a0 <nvic_enable+0xb8>
 8000282:	79fb      	ldrb	r3, [r7, #7]
 8000284:	2b9f      	cmp	r3, #159	; 0x9f
 8000286:	d80b      	bhi.n	80002a0 <nvic_enable+0xb8>
		*NVIC_ISER4 |= (1u<<(irq_number%32));
 8000288:	4b0c      	ldr	r3, [pc, #48]	; (80002bc <nvic_enable+0xd4>)
 800028a:	681a      	ldr	r2, [r3, #0]
 800028c:	79fb      	ldrb	r3, [r7, #7]
 800028e:	f003 031f 	and.w	r3, r3, #31
 8000292:	2101      	movs	r1, #1
 8000294:	fa01 f303 	lsl.w	r3, r1, r3
 8000298:	4908      	ldr	r1, [pc, #32]	; (80002bc <nvic_enable+0xd4>)
 800029a:	4313      	orrs	r3, r2
 800029c:	600b      	str	r3, [r1, #0]
}
 800029e:	e7ff      	b.n	80002a0 <nvic_enable+0xb8>
 80002a0:	bf00      	nop
 80002a2:	370c      	adds	r7, #12
 80002a4:	46bd      	mov	sp, r7
 80002a6:	bc80      	pop	{r7}
 80002a8:	4770      	bx	lr
 80002aa:	bf00      	nop
 80002ac:	e000e100 	.word	0xe000e100
 80002b0:	e000e104 	.word	0xe000e104
 80002b4:	e000e108 	.word	0xe000e108
 80002b8:	e000e10c 	.word	0xe000e10c
 80002bc:	e000e110 	.word	0xe000e110

080002c0 <main>:

uint8_t gpin_no = GPIO_PIN_13;
uint8_t btn_no = GPIO_PIN_0;

int main(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b086      	sub	sp, #24
 80002c4:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed13 = {GPIOD,{GPIO_PIN_13,GPIO_MODE_OUT,GPIO_SPEED_FAST,GPIO_PUPD_NO,GPIO_OTYPE_PP,0}};
 80002c6:	4a10      	ldr	r2, [pc, #64]	; (8000308 <main+0x48>)
 80002c8:	f107 030c 	add.w	r3, r7, #12
 80002cc:	ca07      	ldmia	r2, {r0, r1, r2}
 80002ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}


	gpio_init(&gpioLed13);
 80002d2:	f107 030c 	add.w	r3, r7, #12
 80002d6:	4618      	mov	r0, r3
 80002d8:	f000 f8ca 	bl	8000470 <gpio_init>

	GPIO_Handle_t gpioBtnA0;
	memset(&gpioBtnA0,0,sizeof(gpioBtnA0));
 80002dc:	463b      	mov	r3, r7
 80002de:	220c      	movs	r2, #12
 80002e0:	2100      	movs	r1, #0
 80002e2:	4618      	mov	r0, r3
 80002e4:	f000 facc 	bl	8000880 <memset>

	gpioBtnA0.pGPIOx = GPIOA;
 80002e8:	4b08      	ldr	r3, [pc, #32]	; (800030c <main+0x4c>)
 80002ea:	603b      	str	r3, [r7, #0]
	gpioBtnA0.gpio_pin_config.pin_number = GPIO_PIN_0;
 80002ec:	2300      	movs	r3, #0
 80002ee:	713b      	strb	r3, [r7, #4]
	gpioBtnA0.gpio_pin_config.pin_mode = GPIO_MODE_INT_FT;
 80002f0:	2304      	movs	r3, #4
 80002f2:	717b      	strb	r3, [r7, #5]
	gpioBtnA0.gpio_pin_config.pin_speed = GPIO_SPEED_FAST;
 80002f4:	2302      	movs	r3, #2
 80002f6:	71bb      	strb	r3, [r7, #6]
	gpioBtnA0.gpio_pin_config.pin_pu_pd = GPIO_PUPD_NO;
 80002f8:	2300      	movs	r3, #0
 80002fa:	71fb      	strb	r3, [r7, #7]

	gpio_init(&gpioBtnA0);
 80002fc:	463b      	mov	r3, r7
 80002fe:	4618      	mov	r0, r3
 8000300:	f000 f8b6 	bl	8000470 <gpio_init>
	//gpio_toggle_pin(GPIOD, GPIO_PIN_13);

	while(1)
 8000304:	e7fe      	b.n	8000304 <main+0x44>
 8000306:	bf00      	nop
 8000308:	080008a8 	.word	0x080008a8
 800030c:	40020000 	.word	0x40020000

08000310 <EXTI0_IRQHandler>:

	}
}

void EXTI0_IRQHandler(void)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
	delay(DELAY_SECOND(1));
 8000314:	480e      	ldr	r0, [pc, #56]	; (8000350 <EXTI0_IRQHandler+0x40>)
 8000316:	f000 fa54 	bl	80007c2 <delay>

	if(EXTI->PR & (1u<<btn_no))
 800031a:	4b0e      	ldr	r3, [pc, #56]	; (8000354 <EXTI0_IRQHandler+0x44>)
 800031c:	695a      	ldr	r2, [r3, #20]
 800031e:	4b0e      	ldr	r3, [pc, #56]	; (8000358 <EXTI0_IRQHandler+0x48>)
 8000320:	781b      	ldrb	r3, [r3, #0]
 8000322:	4619      	mov	r1, r3
 8000324:	2301      	movs	r3, #1
 8000326:	408b      	lsls	r3, r1
 8000328:	4013      	ands	r3, r2
 800032a:	2b00      	cmp	r3, #0
 800032c:	d00d      	beq.n	800034a <EXTI0_IRQHandler+0x3a>
	{

		gpio_toggle_pin(GPIOD, GPIO_PIN_13);
 800032e:	210d      	movs	r1, #13
 8000330:	480a      	ldr	r0, [pc, #40]	; (800035c <EXTI0_IRQHandler+0x4c>)
 8000332:	f000 f9b5 	bl	80006a0 <gpio_toggle_pin>

		EXTI->PR |= (1u<<btn_no);
 8000336:	4b07      	ldr	r3, [pc, #28]	; (8000354 <EXTI0_IRQHandler+0x44>)
 8000338:	695a      	ldr	r2, [r3, #20]
 800033a:	4b07      	ldr	r3, [pc, #28]	; (8000358 <EXTI0_IRQHandler+0x48>)
 800033c:	781b      	ldrb	r3, [r3, #0]
 800033e:	4619      	mov	r1, r3
 8000340:	2301      	movs	r3, #1
 8000342:	408b      	lsls	r3, r1
 8000344:	4903      	ldr	r1, [pc, #12]	; (8000354 <EXTI0_IRQHandler+0x44>)
 8000346:	4313      	orrs	r3, r2
 8000348:	614b      	str	r3, [r1, #20]
	}




}
 800034a:	bf00      	nop
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	001e8480 	.word	0x001e8480
 8000354:	40013c00 	.word	0x40013c00
 8000358:	2000001c 	.word	0x2000001c
 800035c:	40020c00 	.word	0x40020c00

08000360 <gpio_clock_en_di>:

static void gpio_clock_en_di(GPIO_RegDef_t *pGPIOx,BOOL state);
static int getFromExtiCodeIrqNumber(uint8_t exticr_no);

void gpio_clock_en_di(GPIO_RegDef_t *pGPIOx,BOOL state)
{
 8000360:	b480      	push	{r7}
 8000362:	b083      	sub	sp, #12
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
 8000368:	460b      	mov	r3, r1
 800036a:	70fb      	strb	r3, [r7, #3]
	RCC->AHB1ENR = (1u<<3);
 800036c:	4b36      	ldr	r3, [pc, #216]	; (8000448 <gpio_clock_en_di+0xe8>)
 800036e:	2208      	movs	r2, #8
 8000370:	631a      	str	r2, [r3, #48]	; 0x30
	if(state == ENABLE)
 8000372:	78fb      	ldrb	r3, [r7, #3]
 8000374:	2b01      	cmp	r3, #1
 8000376:	d161      	bne.n	800043c <gpio_clock_en_di+0xdc>
	{
		if(pGPIOx == GPIOA)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a34      	ldr	r2, [pc, #208]	; (800044c <gpio_clock_en_di+0xec>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <gpio_clock_en_di+0x2e>
			GPIOA_CLOCK_EN();
 8000380:	4b31      	ldr	r3, [pc, #196]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a30      	ldr	r2, [pc, #192]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000386:	f043 0301 	orr.w	r3, r3, #1
 800038a:	6313      	str	r3, [r2, #48]	; 0x30



	}

}
 800038c:	e056      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOB)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a2f      	ldr	r2, [pc, #188]	; (8000450 <gpio_clock_en_di+0xf0>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <gpio_clock_en_di+0x44>
			GPIOB_CLOCK_EN();
 8000396:	4b2c      	ldr	r3, [pc, #176]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a2b      	ldr	r2, [pc, #172]	; (8000448 <gpio_clock_en_di+0xe8>)
 800039c:	f043 0302 	orr.w	r3, r3, #2
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e04b      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOC)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a2b      	ldr	r2, [pc, #172]	; (8000454 <gpio_clock_en_di+0xf4>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <gpio_clock_en_di+0x5a>
			GPIOC_CLOCK_EN();
 80003ac:	4b26      	ldr	r3, [pc, #152]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a25      	ldr	r2, [pc, #148]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003b2:	f043 0304 	orr.w	r3, r3, #4
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e040      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOD)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a26      	ldr	r2, [pc, #152]	; (8000458 <gpio_clock_en_di+0xf8>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <gpio_clock_en_di+0x70>
			GPIOD_CLOCK_EN();
 80003c2:	4b21      	ldr	r3, [pc, #132]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a20      	ldr	r2, [pc, #128]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003c8:	f043 0308 	orr.w	r3, r3, #8
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e035      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOE)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a22      	ldr	r2, [pc, #136]	; (800045c <gpio_clock_en_di+0xfc>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <gpio_clock_en_di+0x86>
			GPIOE_CLOCK_EN();
 80003d8:	4b1b      	ldr	r3, [pc, #108]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a1a      	ldr	r2, [pc, #104]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003de:	f043 0310 	orr.w	r3, r3, #16
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e02a      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOF)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a1d      	ldr	r2, [pc, #116]	; (8000460 <gpio_clock_en_di+0x100>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <gpio_clock_en_di+0x9c>
			GPIOF_CLOCK_EN();
 80003ee:	4b16      	ldr	r3, [pc, #88]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a15      	ldr	r2, [pc, #84]	; (8000448 <gpio_clock_en_di+0xe8>)
 80003f4:	f043 0320 	orr.w	r3, r3, #32
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e01f      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOG)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a19      	ldr	r2, [pc, #100]	; (8000464 <gpio_clock_en_di+0x104>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <gpio_clock_en_di+0xb2>
			GPIOG_CLOCK_EN();
 8000404:	4b10      	ldr	r3, [pc, #64]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a0f      	ldr	r2, [pc, #60]	; (8000448 <gpio_clock_en_di+0xe8>)
 800040a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e014      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOH)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a14      	ldr	r2, [pc, #80]	; (8000468 <gpio_clock_en_di+0x108>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <gpio_clock_en_di+0xc8>
			GPIOH_CLOCK_EN();
 800041a:	4b0b      	ldr	r3, [pc, #44]	; (8000448 <gpio_clock_en_di+0xe8>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a0a      	ldr	r2, [pc, #40]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000420:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e009      	b.n	800043c <gpio_clock_en_di+0xdc>
		else if(pGPIOx == GPIOI)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a10      	ldr	r2, [pc, #64]	; (800046c <gpio_clock_en_di+0x10c>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d105      	bne.n	800043c <gpio_clock_en_di+0xdc>
			GPIOI_CLOCK_EN();
 8000430:	4b05      	ldr	r3, [pc, #20]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a04      	ldr	r2, [pc, #16]	; (8000448 <gpio_clock_en_di+0xe8>)
 8000436:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	bf00      	nop
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	bc80      	pop	{r7}
 8000444:	4770      	bx	lr
 8000446:	bf00      	nop
 8000448:	40023800 	.word	0x40023800
 800044c:	40020000 	.word	0x40020000
 8000450:	40020400 	.word	0x40020400
 8000454:	40020800 	.word	0x40020800
 8000458:	40020c00 	.word	0x40020c00
 800045c:	40021000 	.word	0x40021000
 8000460:	40021400 	.word	0x40021400
 8000464:	40021800 	.word	0x40021800
 8000468:	40021c00 	.word	0x40021c00
 800046c:	40022000 	.word	0x40022000

08000470 <gpio_init>:

void gpio_init(GPIO_Handle_t *pgpio_handle)
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b084      	sub	sp, #16
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 8000478:	2300      	movs	r3, #0
 800047a:	60fb      	str	r3, [r7, #12]

	gpio_clock_en_di(pgpio_handle->pGPIOx, ENABLE);
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	2101      	movs	r1, #1
 8000482:	4618      	mov	r0, r3
 8000484:	f7ff ff6c 	bl	8000360 <gpio_clock_en_di>


	//1.mode secimi yapilacak
	if(pgpio_handle->gpio_pin_config.pin_mode < GPIO_MODE_INT_FT) // non-interrupt mode
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	795b      	ldrb	r3, [r3, #5]
 800048c:	2b03      	cmp	r3, #3
 800048e:	d820      	bhi.n	80004d2 <gpio_init+0x62>
	{
		temp = (pgpio_handle->gpio_pin_config.pin_mode <<(2*pgpio_handle->gpio_pin_config.pin_number));
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	461a      	mov	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	005b      	lsls	r3, r3, #1
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	60fb      	str	r3, [r7, #12]
		pgpio_handle->pGPIOx->MODER &= ~(0b11<<(2*pgpio_handle->gpio_pin_config.pin_number)); //c`de ikilik sayi sistemi extension
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	681a      	ldr	r2, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	005b      	lsls	r3, r3, #1
 80004ae:	2103      	movs	r1, #3
 80004b0:	fa01 f303 	lsl.w	r3, r1, r3
 80004b4:	43db      	mvns	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	400a      	ands	r2, r1
 80004be:	601a      	str	r2, [r3, #0]
		pgpio_handle->pGPIOx->MODER |= temp;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	6819      	ldr	r1, [r3, #0]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	68fa      	ldr	r2, [r7, #12]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	601a      	str	r2, [r3, #0]
 80004d0:	e07f      	b.n	80005d2 <gpio_init+0x162>
	}

	else // interrupt mode
	{
		SYSCFG_CLOCK_EN(); // System Clock Enable
 80004d2:	4b70      	ldr	r3, [pc, #448]	; (8000694 <gpio_init+0x224>)
 80004d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004d6:	4a6f      	ldr	r2, [pc, #444]	; (8000694 <gpio_init+0x224>)
 80004d8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004dc:	6453      	str	r3, [r2, #68]	; 0x44

		if(pgpio_handle->gpio_pin_config.pin_mode == GPIO_MODE_INT_FT)
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	795b      	ldrb	r3, [r3, #5]
 80004e2:	2b04      	cmp	r3, #4
 80004e4:	d115      	bne.n	8000512 <gpio_init+0xa2>
		{
			EXTI->FTSR |= (1u<<pgpio_handle->gpio_pin_config.pin_number);
 80004e6:	4b6c      	ldr	r3, [pc, #432]	; (8000698 <gpio_init+0x228>)
 80004e8:	68da      	ldr	r2, [r3, #12]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	4619      	mov	r1, r3
 80004f0:	2301      	movs	r3, #1
 80004f2:	408b      	lsls	r3, r1
 80004f4:	4968      	ldr	r1, [pc, #416]	; (8000698 <gpio_init+0x228>)
 80004f6:	4313      	orrs	r3, r2
 80004f8:	60cb      	str	r3, [r1, #12]
			EXTI->RTSR &= ~(1u<<pgpio_handle->gpio_pin_config.pin_number);//clear
 80004fa:	4b67      	ldr	r3, [pc, #412]	; (8000698 <gpio_init+0x228>)
 80004fc:	689a      	ldr	r2, [r3, #8]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	4619      	mov	r1, r3
 8000504:	2301      	movs	r3, #1
 8000506:	408b      	lsls	r3, r1
 8000508:	43db      	mvns	r3, r3
 800050a:	4963      	ldr	r1, [pc, #396]	; (8000698 <gpio_init+0x228>)
 800050c:	4013      	ands	r3, r2
 800050e:	608b      	str	r3, [r1, #8]
 8000510:	e031      	b.n	8000576 <gpio_init+0x106>
		}
		else if(pgpio_handle->gpio_pin_config.pin_mode == GPIO_MODE_INT_RT)
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	795b      	ldrb	r3, [r3, #5]
 8000516:	2b05      	cmp	r3, #5
 8000518:	d115      	bne.n	8000546 <gpio_init+0xd6>
		{
			EXTI->RTSR |= (1u<<pgpio_handle->gpio_pin_config.pin_number);
 800051a:	4b5f      	ldr	r3, [pc, #380]	; (8000698 <gpio_init+0x228>)
 800051c:	689a      	ldr	r2, [r3, #8]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	791b      	ldrb	r3, [r3, #4]
 8000522:	4619      	mov	r1, r3
 8000524:	2301      	movs	r3, #1
 8000526:	408b      	lsls	r3, r1
 8000528:	495b      	ldr	r1, [pc, #364]	; (8000698 <gpio_init+0x228>)
 800052a:	4313      	orrs	r3, r2
 800052c:	608b      	str	r3, [r1, #8]
			EXTI->FTSR &= ~(1u<<pgpio_handle->gpio_pin_config.pin_number);//clear
 800052e:	4b5a      	ldr	r3, [pc, #360]	; (8000698 <gpio_init+0x228>)
 8000530:	68da      	ldr	r2, [r3, #12]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	791b      	ldrb	r3, [r3, #4]
 8000536:	4619      	mov	r1, r3
 8000538:	2301      	movs	r3, #1
 800053a:	408b      	lsls	r3, r1
 800053c:	43db      	mvns	r3, r3
 800053e:	4956      	ldr	r1, [pc, #344]	; (8000698 <gpio_init+0x228>)
 8000540:	4013      	ands	r3, r2
 8000542:	60cb      	str	r3, [r1, #12]
 8000544:	e017      	b.n	8000576 <gpio_init+0x106>
		}
		else if(pgpio_handle->gpio_pin_config.pin_mode == GPIO_MODE_INT_FRT)
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	795b      	ldrb	r3, [r3, #5]
 800054a:	2b06      	cmp	r3, #6
 800054c:	d113      	bne.n	8000576 <gpio_init+0x106>
		{
			EXTI->FTSR |= (1u<<pgpio_handle->gpio_pin_config.pin_number);
 800054e:	4b52      	ldr	r3, [pc, #328]	; (8000698 <gpio_init+0x228>)
 8000550:	68da      	ldr	r2, [r3, #12]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	4619      	mov	r1, r3
 8000558:	2301      	movs	r3, #1
 800055a:	408b      	lsls	r3, r1
 800055c:	494e      	ldr	r1, [pc, #312]	; (8000698 <gpio_init+0x228>)
 800055e:	4313      	orrs	r3, r2
 8000560:	60cb      	str	r3, [r1, #12]
			EXTI->RTSR |= (1u<<pgpio_handle->gpio_pin_config.pin_number);
 8000562:	4b4d      	ldr	r3, [pc, #308]	; (8000698 <gpio_init+0x228>)
 8000564:	689a      	ldr	r2, [r3, #8]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	791b      	ldrb	r3, [r3, #4]
 800056a:	4619      	mov	r1, r3
 800056c:	2301      	movs	r3, #1
 800056e:	408b      	lsls	r3, r1
 8000570:	4949      	ldr	r1, [pc, #292]	; (8000698 <gpio_init+0x228>)
 8000572:	4313      	orrs	r3, r2
 8000574:	608b      	str	r3, [r1, #8]
		}

		uint8_t exticr_no = pgpio_handle->gpio_pin_config.pin_number/4;
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	791b      	ldrb	r3, [r3, #4]
 800057a:	089b      	lsrs	r3, r3, #2
 800057c:	72fb      	strb	r3, [r7, #11]
		uint8_t exticr_shift_no = pgpio_handle->gpio_pin_config.pin_number % 4;
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	f003 0303 	and.w	r3, r3, #3
 8000586:	72bb      	strb	r3, [r7, #10]

	    uint8_t port_code =	get_exticr_port_code(pgpio_handle->pGPIOx);
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	4618      	mov	r0, r3
 800058e:	f000 f89b 	bl	80006c8 <get_exticr_port_code>
 8000592:	4603      	mov	r3, r0
 8000594:	727b      	strb	r3, [r7, #9]
		SYSCFG->EXTICR[exticr_no] = (port_code<<(exticr_shift_no *4));
 8000596:	7a7a      	ldrb	r2, [r7, #9]
 8000598:	7abb      	ldrb	r3, [r7, #10]
 800059a:	009b      	lsls	r3, r3, #2
 800059c:	fa02 f103 	lsl.w	r1, r2, r3
 80005a0:	4a3e      	ldr	r2, [pc, #248]	; (800069c <gpio_init+0x22c>)
 80005a2:	7afb      	ldrb	r3, [r7, #11]
 80005a4:	3302      	adds	r3, #2
 80005a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//enable interrupt request
		EXTI->IMR |=(1u<<pgpio_handle->gpio_pin_config.pin_number);
 80005aa:	4b3b      	ldr	r3, [pc, #236]	; (8000698 <gpio_init+0x228>)
 80005ac:	681a      	ldr	r2, [r3, #0]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	4619      	mov	r1, r3
 80005b4:	2301      	movs	r3, #1
 80005b6:	408b      	lsls	r3, r1
 80005b8:	4937      	ldr	r1, [pc, #220]	; (8000698 <gpio_init+0x228>)
 80005ba:	4313      	orrs	r3, r2
 80005bc:	600b      	str	r3, [r1, #0]
		uint8_t irq_no = getFromExtiCodeIrqNumber(exticr_no);
 80005be:	7afb      	ldrb	r3, [r7, #11]
 80005c0:	4618      	mov	r0, r3
 80005c2:	f000 f8cb 	bl	800075c <getFromExtiCodeIrqNumber>
 80005c6:	4603      	mov	r3, r0
 80005c8:	723b      	strb	r3, [r7, #8]
		nvic_enable(irq_no);
 80005ca:	7a3b      	ldrb	r3, [r7, #8]
 80005cc:	4618      	mov	r0, r3
 80005ce:	f7ff fe0b 	bl	80001e8 <nvic_enable>
	}
	temp = (pgpio_handle->gpio_pin_config.pin_otype << pgpio_handle->gpio_pin_config.pin_number);
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	7a1b      	ldrb	r3, [r3, #8]
 80005d6:	461a      	mov	r2, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	fa02 f303 	lsl.w	r3, r2, r3
 80005e0:	60fb      	str	r3, [r7, #12]
	pgpio_handle->pGPIOx->OTYPER &= ~(1u<<(2*pgpio_handle->gpio_pin_config.pin_number));
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	6859      	ldr	r1, [r3, #4]
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	791b      	ldrb	r3, [r3, #4]
 80005ec:	005b      	lsls	r3, r3, #1
 80005ee:	2201      	movs	r2, #1
 80005f0:	fa02 f303 	lsl.w	r3, r2, r3
 80005f4:	43da      	mvns	r2, r3
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	400a      	ands	r2, r1
 80005fc:	605a      	str	r2, [r3, #4]

	pgpio_handle->pGPIOx->OTYPER |= temp;
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	6859      	ldr	r1, [r3, #4]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	68fa      	ldr	r2, [r7, #12]
 800060a:	430a      	orrs	r2, r1
 800060c:	605a      	str	r2, [r3, #4]


	temp = (pgpio_handle->gpio_pin_config.pin_speed << pgpio_handle->gpio_pin_config.pin_number);
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	799b      	ldrb	r3, [r3, #6]
 8000612:	461a      	mov	r2, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	fa02 f303 	lsl.w	r3, r2, r3
 800061c:	60fb      	str	r3, [r7, #12]
	pgpio_handle->pGPIOx->OSPEEDR &= ~(0b11<<(2*pgpio_handle->gpio_pin_config.pin_number));
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	689a      	ldr	r2, [r3, #8]
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	005b      	lsls	r3, r3, #1
 800062a:	2103      	movs	r1, #3
 800062c:	fa01 f303 	lsl.w	r3, r1, r3
 8000630:	43db      	mvns	r3, r3
 8000632:	4619      	mov	r1, r3
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	400a      	ands	r2, r1
 800063a:	609a      	str	r2, [r3, #8]
	pgpio_handle->pGPIOx->OSPEEDR |= temp;
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	6899      	ldr	r1, [r3, #8]
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	68fa      	ldr	r2, [r7, #12]
 8000648:	430a      	orrs	r2, r1
 800064a:	609a      	str	r2, [r3, #8]


	temp = (pgpio_handle->gpio_pin_config.pin_pu_pd << pgpio_handle->gpio_pin_config.pin_number);
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	79db      	ldrb	r3, [r3, #7]
 8000650:	461a      	mov	r2, r3
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	fa02 f303 	lsl.w	r3, r2, r3
 800065a:	60fb      	str	r3, [r7, #12]
	pgpio_handle->pGPIOx->PUPDR &= ~(0b11<<(2*pgpio_handle->gpio_pin_config.pin_number));
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	68da      	ldr	r2, [r3, #12]
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	791b      	ldrb	r3, [r3, #4]
 8000666:	005b      	lsls	r3, r3, #1
 8000668:	2103      	movs	r1, #3
 800066a:	fa01 f303 	lsl.w	r3, r1, r3
 800066e:	43db      	mvns	r3, r3
 8000670:	4619      	mov	r1, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	400a      	ands	r2, r1
 8000678:	60da      	str	r2, [r3, #12]
	pgpio_handle->pGPIOx->PUPDR |= temp;
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	68d9      	ldr	r1, [r3, #12]
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	68fa      	ldr	r2, [r7, #12]
 8000686:	430a      	orrs	r2, r1
 8000688:	60da      	str	r2, [r3, #12]

}
 800068a:	bf00      	nop
 800068c:	3710      	adds	r7, #16
 800068e:	46bd      	mov	sp, r7
 8000690:	bd80      	pop	{r7, pc}
 8000692:	bf00      	nop
 8000694:	40023800 	.word	0x40023800
 8000698:	40013c00 	.word	0x40013c00
 800069c:	40013800 	.word	0x40013800

080006a0 <gpio_toggle_pin>:


}

void gpio_toggle_pin(GPIO_RegDef_t * pgpiox,uint8_t pin_no)
{
 80006a0:	b480      	push	{r7}
 80006a2:	b083      	sub	sp, #12
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	6078      	str	r0, [r7, #4]
 80006a8:	460b      	mov	r3, r1
 80006aa:	70fb      	strb	r3, [r7, #3]
	pgpiox->ODR ^= (1u<<pin_no);
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	695a      	ldr	r2, [r3, #20]
 80006b0:	78fb      	ldrb	r3, [r7, #3]
 80006b2:	2101      	movs	r1, #1
 80006b4:	fa01 f303 	lsl.w	r3, r1, r3
 80006b8:	405a      	eors	r2, r3
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	615a      	str	r2, [r3, #20]
}
 80006be:	bf00      	nop
 80006c0:	370c      	adds	r7, #12
 80006c2:	46bd      	mov	sp, r7
 80006c4:	bc80      	pop	{r7}
 80006c6:	4770      	bx	lr

080006c8 <get_exticr_port_code>:
	return val;

}

ExtiCR_PortCode get_exticr_port_code(const GPIO_RegDef_t *pGPIOx)
{
 80006c8:	b480      	push	{r7}
 80006ca:	b083      	sub	sp, #12
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	6078      	str	r0, [r7, #4]
	if(pGPIOx == GPIOA)
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	4a1a      	ldr	r2, [pc, #104]	; (800073c <get_exticr_port_code+0x74>)
 80006d4:	4293      	cmp	r3, r2
 80006d6:	d101      	bne.n	80006dc <get_exticr_port_code+0x14>
		return Port_CodeA;
 80006d8:	2300      	movs	r3, #0
 80006da:	e029      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOB)
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	4a18      	ldr	r2, [pc, #96]	; (8000740 <get_exticr_port_code+0x78>)
 80006e0:	4293      	cmp	r3, r2
 80006e2:	d101      	bne.n	80006e8 <get_exticr_port_code+0x20>
		return Port_CodeB;
 80006e4:	2301      	movs	r3, #1
 80006e6:	e023      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOC)
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	4a16      	ldr	r2, [pc, #88]	; (8000744 <get_exticr_port_code+0x7c>)
 80006ec:	4293      	cmp	r3, r2
 80006ee:	d101      	bne.n	80006f4 <get_exticr_port_code+0x2c>
		return Port_CodeC;
 80006f0:	2302      	movs	r3, #2
 80006f2:	e01d      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOD)
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	4a14      	ldr	r2, [pc, #80]	; (8000748 <get_exticr_port_code+0x80>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d101      	bne.n	8000700 <get_exticr_port_code+0x38>
		return Port_CodeD;
 80006fc:	2303      	movs	r3, #3
 80006fe:	e017      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOE)
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	4a12      	ldr	r2, [pc, #72]	; (800074c <get_exticr_port_code+0x84>)
 8000704:	4293      	cmp	r3, r2
 8000706:	d101      	bne.n	800070c <get_exticr_port_code+0x44>
		return Port_CodeE;
 8000708:	2304      	movs	r3, #4
 800070a:	e011      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOF)
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	4a10      	ldr	r2, [pc, #64]	; (8000750 <get_exticr_port_code+0x88>)
 8000710:	4293      	cmp	r3, r2
 8000712:	d101      	bne.n	8000718 <get_exticr_port_code+0x50>
		return Port_CodeF;
 8000714:	2305      	movs	r3, #5
 8000716:	e00b      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOG)
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	4a0e      	ldr	r2, [pc, #56]	; (8000754 <get_exticr_port_code+0x8c>)
 800071c:	4293      	cmp	r3, r2
 800071e:	d101      	bne.n	8000724 <get_exticr_port_code+0x5c>
		return Port_CodeG;
 8000720:	2306      	movs	r3, #6
 8000722:	e005      	b.n	8000730 <get_exticr_port_code+0x68>
	else if(pGPIOx == GPIOH)
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	4a0c      	ldr	r2, [pc, #48]	; (8000758 <get_exticr_port_code+0x90>)
 8000728:	4293      	cmp	r3, r2
 800072a:	d101      	bne.n	8000730 <get_exticr_port_code+0x68>
		return Port_CodeH;
 800072c:	2307      	movs	r3, #7
 800072e:	e7ff      	b.n	8000730 <get_exticr_port_code+0x68>

}
 8000730:	4618      	mov	r0, r3
 8000732:	370c      	adds	r7, #12
 8000734:	46bd      	mov	sp, r7
 8000736:	bc80      	pop	{r7}
 8000738:	4770      	bx	lr
 800073a:	bf00      	nop
 800073c:	40020000 	.word	0x40020000
 8000740:	40020400 	.word	0x40020400
 8000744:	40020800 	.word	0x40020800
 8000748:	40020c00 	.word	0x40020c00
 800074c:	40021000 	.word	0x40021000
 8000750:	40021400 	.word	0x40021400
 8000754:	40021800 	.word	0x40021800
 8000758:	40021c00 	.word	0x40021c00

0800075c <getFromExtiCodeIrqNumber>:

static int getFromExtiCodeIrqNumber(uint8_t exticr_no)
{
 800075c:	b480      	push	{r7}
 800075e:	b083      	sub	sp, #12
 8000760:	af00      	add	r7, sp, #0
 8000762:	4603      	mov	r3, r0
 8000764:	71fb      	strb	r3, [r7, #7]
	if(exticr_no == 0)
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	2b00      	cmp	r3, #0
 800076a:	d101      	bne.n	8000770 <getFromExtiCodeIrqNumber+0x14>
		return IRQ_NO_EXTI0;
 800076c:	2306      	movs	r3, #6
 800076e:	e023      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
	else if(exticr_no == 1)
 8000770:	79fb      	ldrb	r3, [r7, #7]
 8000772:	2b01      	cmp	r3, #1
 8000774:	d101      	bne.n	800077a <getFromExtiCodeIrqNumber+0x1e>
		return IRQ_NO_EXTI1;
 8000776:	2307      	movs	r3, #7
 8000778:	e01e      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>

	else if(exticr_no == 2)
 800077a:	79fb      	ldrb	r3, [r7, #7]
 800077c:	2b02      	cmp	r3, #2
 800077e:	d101      	bne.n	8000784 <getFromExtiCodeIrqNumber+0x28>
		return IRQ_NO_EXTI2;
 8000780:	2308      	movs	r3, #8
 8000782:	e019      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
	else if(exticr_no == 3)
 8000784:	79fb      	ldrb	r3, [r7, #7]
 8000786:	2b03      	cmp	r3, #3
 8000788:	d101      	bne.n	800078e <getFromExtiCodeIrqNumber+0x32>
		return IRQ_NO_EXTI3;
 800078a:	2309      	movs	r3, #9
 800078c:	e014      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
	else if(exticr_no == 4)
 800078e:	79fb      	ldrb	r3, [r7, #7]
 8000790:	2b04      	cmp	r3, #4
 8000792:	d101      	bne.n	8000798 <getFromExtiCodeIrqNumber+0x3c>
		return IRQ_NO_EXTI4;
 8000794:	230a      	movs	r3, #10
 8000796:	e00f      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
	else if(exticr_no>EXTI4 && exticr_no<EXTI10)
 8000798:	79fb      	ldrb	r3, [r7, #7]
 800079a:	2b04      	cmp	r3, #4
 800079c:	d904      	bls.n	80007a8 <getFromExtiCodeIrqNumber+0x4c>
 800079e:	79fb      	ldrb	r3, [r7, #7]
 80007a0:	2b05      	cmp	r3, #5
 80007a2:	d801      	bhi.n	80007a8 <getFromExtiCodeIrqNumber+0x4c>
		return IRQ_NO_EXTI9_5;
 80007a4:	2317      	movs	r3, #23
 80007a6:	e007      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
	else if(exticr_no>EXTI9 && exticr_no<=EXTI15)
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	2b05      	cmp	r3, #5
 80007ac:	d904      	bls.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
 80007ae:	79fb      	ldrb	r3, [r7, #7]
 80007b0:	2b06      	cmp	r3, #6
 80007b2:	d801      	bhi.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>
		return IRQ_NO_EXTI15_10;
 80007b4:	2328      	movs	r3, #40	; 0x28
 80007b6:	e7ff      	b.n	80007b8 <getFromExtiCodeIrqNumber+0x5c>





}
 80007b8:	4618      	mov	r0, r3
 80007ba:	370c      	adds	r7, #12
 80007bc:	46bd      	mov	sp, r7
 80007be:	bc80      	pop	{r7}
 80007c0:	4770      	bx	lr

080007c2 <delay>:
#include "utility.h"



void delay(uint32_t time)
{
 80007c2:	b480      	push	{r7}
 80007c4:	b083      	sub	sp, #12
 80007c6:	af00      	add	r7, sp, #0
 80007c8:	6078      	str	r0, [r7, #4]
	while(time--);
 80007ca:	bf00      	nop
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	1e5a      	subs	r2, r3, #1
 80007d0:	607a      	str	r2, [r7, #4]
 80007d2:	2b00      	cmp	r3, #0
 80007d4:	d1fa      	bne.n	80007cc <delay+0xa>
}
 80007d6:	bf00      	nop
 80007d8:	bf00      	nop
 80007da:	370c      	adds	r7, #12
 80007dc:	46bd      	mov	sp, r7
 80007de:	bc80      	pop	{r7}
 80007e0:	4770      	bx	lr
	...

080007e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007e4:	480d      	ldr	r0, [pc, #52]	; (800081c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007e6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80007e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007ec:	480c      	ldr	r0, [pc, #48]	; (8000820 <LoopForever+0x6>)
  ldr r1, =_edata
 80007ee:	490d      	ldr	r1, [pc, #52]	; (8000824 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007f0:	4a0d      	ldr	r2, [pc, #52]	; (8000828 <LoopForever+0xe>)
  movs r3, #0
 80007f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007f4:	e002      	b.n	80007fc <LoopCopyDataInit>

080007f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007fa:	3304      	adds	r3, #4

080007fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000800:	d3f9      	bcc.n	80007f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000802:	4a0a      	ldr	r2, [pc, #40]	; (800082c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000804:	4c0a      	ldr	r4, [pc, #40]	; (8000830 <LoopForever+0x16>)
  movs r3, #0
 8000806:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000808:	e001      	b.n	800080e <LoopFillZerobss>

0800080a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800080a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800080c:	3204      	adds	r2, #4

0800080e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800080e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000810:	d3fb      	bcc.n	800080a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000812:	f000 f811 	bl	8000838 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000816:	f7ff fd53 	bl	80002c0 <main>

0800081a <LoopForever>:

LoopForever:
    b LoopForever
 800081a:	e7fe      	b.n	800081a <LoopForever>
  ldr   r0, =_estack
 800081c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000820:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000824:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000828:	080008bc 	.word	0x080008bc
  ldr r2, =_sbss
 800082c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000830:	20000020 	.word	0x20000020

08000834 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000834:	e7fe      	b.n	8000834 <ADC_IRQHandler>
	...

08000838 <__libc_init_array>:
 8000838:	b570      	push	{r4, r5, r6, lr}
 800083a:	4d0d      	ldr	r5, [pc, #52]	; (8000870 <__libc_init_array+0x38>)
 800083c:	4c0d      	ldr	r4, [pc, #52]	; (8000874 <__libc_init_array+0x3c>)
 800083e:	1b64      	subs	r4, r4, r5
 8000840:	10a4      	asrs	r4, r4, #2
 8000842:	2600      	movs	r6, #0
 8000844:	42a6      	cmp	r6, r4
 8000846:	d109      	bne.n	800085c <__libc_init_array+0x24>
 8000848:	4d0b      	ldr	r5, [pc, #44]	; (8000878 <__libc_init_array+0x40>)
 800084a:	4c0c      	ldr	r4, [pc, #48]	; (800087c <__libc_init_array+0x44>)
 800084c:	f000 f820 	bl	8000890 <_init>
 8000850:	1b64      	subs	r4, r4, r5
 8000852:	10a4      	asrs	r4, r4, #2
 8000854:	2600      	movs	r6, #0
 8000856:	42a6      	cmp	r6, r4
 8000858:	d105      	bne.n	8000866 <__libc_init_array+0x2e>
 800085a:	bd70      	pop	{r4, r5, r6, pc}
 800085c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000860:	4798      	blx	r3
 8000862:	3601      	adds	r6, #1
 8000864:	e7ee      	b.n	8000844 <__libc_init_array+0xc>
 8000866:	f855 3b04 	ldr.w	r3, [r5], #4
 800086a:	4798      	blx	r3
 800086c:	3601      	adds	r6, #1
 800086e:	e7f2      	b.n	8000856 <__libc_init_array+0x1e>
 8000870:	080008b4 	.word	0x080008b4
 8000874:	080008b4 	.word	0x080008b4
 8000878:	080008b4 	.word	0x080008b4
 800087c:	080008b8 	.word	0x080008b8

08000880 <memset>:
 8000880:	4402      	add	r2, r0
 8000882:	4603      	mov	r3, r0
 8000884:	4293      	cmp	r3, r2
 8000886:	d100      	bne.n	800088a <memset+0xa>
 8000888:	4770      	bx	lr
 800088a:	f803 1b01 	strb.w	r1, [r3], #1
 800088e:	e7f9      	b.n	8000884 <memset+0x4>

08000890 <_init>:
 8000890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000892:	bf00      	nop
 8000894:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000896:	bc08      	pop	{r3}
 8000898:	469e      	mov	lr, r3
 800089a:	4770      	bx	lr

0800089c <_fini>:
 800089c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800089e:	bf00      	nop
 80008a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008a2:	bc08      	pop	{r3}
 80008a4:	469e      	mov	lr, r3
 80008a6:	4770      	bx	lr
